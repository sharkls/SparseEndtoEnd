// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: SparseEnd2EndConfig_conf.proto
// Protobuf C++ Version: 5.30.0-dev

#include "SparseEnd2EndConfig_conf.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace sparsebev {

inline constexpr PreprocessorParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        num_cams_{0u},
        raw_img_c_{0u},
        raw_img_h_{0u},
        raw_img_w_{0u},
        model_input_img_c_{0u},
        model_input_img_h_{0u},
        model_input_img_w_{0u},
        resize_ratio_{0},
        crop_height_{0u},
        crop_width_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PreprocessorParams::PreprocessorParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PreprocessorParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PreprocessorParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreprocessorParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreprocessorParamsDefaultTypeInternal() {}
  union {
    PreprocessorParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreprocessorParamsDefaultTypeInternal _PreprocessorParams_default_instance_;

inline constexpr PostprocessorParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        post_process_out_nums_{0u},
        post_process_threshold_{0},
        use_gpu_nms_{false},
        gpu_nms_threshold_{0},
        max_output_boxes_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR PostprocessorParams::PostprocessorParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PostprocessorParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PostprocessorParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PostprocessorParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PostprocessorParamsDefaultTypeInternal() {}
  union {
    PostprocessorParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PostprocessorParamsDefaultTypeInternal _PostprocessorParams_default_instance_;

inline constexpr ModelCfgParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sparse4d_extract_feat_shape_lc_{},
        _sparse4d_extract_feat_shape_lc_cached_byte_size_{0},
        sparse4d_extract_feat_spatial_shapes_ld_{},
        _sparse4d_extract_feat_spatial_shapes_ld_cached_byte_size_{0},
        sparse4d_extract_feat_level_start_index_{},
        _sparse4d_extract_feat_level_start_index_cached_byte_size_{0},
        class_names_{},
        multiview_multiscale_deformable_attention_aggregation_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        embedfeat_dims_{0u},
        num_classes_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR ModelCfgParams::ModelCfgParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModelCfgParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModelCfgParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModelCfgParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModelCfgParamsDefaultTypeInternal() {}
  union {
    ModelCfgParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModelCfgParamsDefaultTypeInternal _ModelCfgParams_default_instance_;

inline constexpr InstanceBankParams::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        kmeans_anchors_{},
        instance_bank_anchor_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        num_querys_{0u},
        query_dims_{0u},
        topk_querys_{0u},
        max_time_interval_{0},
        default_time_interval_{0},
        confidence_decay_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InstanceBankParams::InstanceBankParams(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(InstanceBankParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InstanceBankParamsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InstanceBankParamsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InstanceBankParamsDefaultTypeInternal() {}
  union {
    InstanceBankParams _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InstanceBankParamsDefaultTypeInternal _InstanceBankParams_default_instance_;

inline constexpr E2ETrtEngine::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        input_names_{},
        output_names_{},
        engine_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        plugin_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR E2ETrtEngine::E2ETrtEngine(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(E2ETrtEngine_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct E2ETrtEngineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR E2ETrtEngineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~E2ETrtEngineDefaultTypeInternal() {}
  union {
    E2ETrtEngine _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 E2ETrtEngineDefaultTypeInternal _E2ETrtEngine_default_instance_;

inline constexpr TaskConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        homography_path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        model_cfg_params_{nullptr},
        preprocessor_params_{nullptr},
        instance_bank_params_{nullptr},
        postprocessor_params_{nullptr},
        extract_feat_engine_{nullptr},
        head1st_engine_{nullptr},
        head2nd_engine_{nullptr},
        run_status_{false},
        use_half_precision_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TaskConfig::TaskConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TaskConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskConfigDefaultTypeInternal() {}
  union {
    TaskConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskConfigDefaultTypeInternal _TaskConfig_default_instance_;

inline constexpr ModuleConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_config_{nullptr},
        modules_config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ModuleConfig::ModuleConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ModuleConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ModuleConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModuleConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModuleConfigDefaultTypeInternal() {}
  union {
    ModuleConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModuleConfigDefaultTypeInternal _ModuleConfig_default_instance_;
}  // namespace sparsebev
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_SparseEnd2EndConfig_5fconf_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_SparseEnd2EndConfig_5fconf_2eproto = nullptr;
const ::uint32_t
    TableStruct_SparseEnd2EndConfig_5fconf_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.model_cfg_params_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.preprocessor_params_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.instance_bank_params_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.postprocessor_params_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.extract_feat_engine_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.head1st_engine_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.head2nd_engine_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.homography_path_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.run_status_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::TaskConfig, _impl_.use_half_precision_),
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        0,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_.embedfeat_dims_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_.sparse4d_extract_feat_shape_lc_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_.sparse4d_extract_feat_spatial_shapes_ld_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_.sparse4d_extract_feat_level_start_index_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_.multiview_multiscale_deformable_attention_aggregation_path_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_.num_classes_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModelCfgParams, _impl_.class_names_),
        1,
        ~0u,
        ~0u,
        ~0u,
        0,
        2,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::sparsebev::E2ETrtEngine, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::E2ETrtEngine, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sparsebev::E2ETrtEngine, _impl_.engine_path_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::E2ETrtEngine, _impl_.plugin_path_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::E2ETrtEngine, _impl_.input_names_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::E2ETrtEngine, _impl_.output_names_),
        0,
        1,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.num_cams_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.raw_img_c_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.raw_img_h_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.raw_img_w_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.model_input_img_c_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.model_input_img_h_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.model_input_img_w_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.resize_ratio_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.crop_height_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PreprocessorParams, _impl_.crop_width_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.num_querys_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.query_dims_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.kmeans_anchors_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.topk_querys_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.max_time_interval_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.default_time_interval_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.confidence_decay_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::InstanceBankParams, _impl_.instance_bank_anchor_path_),
        1,
        2,
        ~0u,
        3,
        4,
        5,
        6,
        0,
        PROTOBUF_FIELD_OFFSET(::sparsebev::PostprocessorParams, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PostprocessorParams, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sparsebev::PostprocessorParams, _impl_.post_process_out_nums_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PostprocessorParams, _impl_.post_process_threshold_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PostprocessorParams, _impl_.use_gpu_nms_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PostprocessorParams, _impl_.gpu_nms_threshold_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::PostprocessorParams, _impl_.max_output_boxes_),
        0,
        1,
        2,
        3,
        4,
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModuleConfig, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModuleConfig, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModuleConfig, _impl_.task_config_),
        PROTOBUF_FIELD_OFFSET(::sparsebev::ModuleConfig, _impl_.modules_config_),
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 18, -1, sizeof(::sparsebev::TaskConfig)},
        {28, 43, -1, sizeof(::sparsebev::ModelCfgParams)},
        {50, 62, -1, sizeof(::sparsebev::E2ETrtEngine)},
        {66, 84, -1, sizeof(::sparsebev::PreprocessorParams)},
        {94, 110, -1, sizeof(::sparsebev::InstanceBankParams)},
        {118, 131, -1, sizeof(::sparsebev::PostprocessorParams)},
        {136, 146, -1, sizeof(::sparsebev::ModuleConfig)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::sparsebev::_TaskConfig_default_instance_._instance,
    &::sparsebev::_ModelCfgParams_default_instance_._instance,
    &::sparsebev::_E2ETrtEngine_default_instance_._instance,
    &::sparsebev::_PreprocessorParams_default_instance_._instance,
    &::sparsebev::_InstanceBankParams_default_instance_._instance,
    &::sparsebev::_PostprocessorParams_default_instance_._instance,
    &::sparsebev::_ModuleConfig_default_instance_._instance,
};
const char descriptor_table_protodef_SparseEnd2EndConfig_5fconf_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\036SparseEnd2EndConfig_conf.proto\022\tsparse"
    "bev\032\032AlgorithmConfig_conf.proto\"\331\003\n\nTask"
    "Config\0223\n\020model_cfg_params\030\001 \001(\0132\031.spars"
    "ebev.ModelCfgParams\022:\n\023preprocessor_para"
    "ms\030\002 \001(\0132\035.sparsebev.PreprocessorParams\022"
    ";\n\024instance_bank_params\030\003 \001(\0132\035.sparsebe"
    "v.InstanceBankParams\022<\n\024postprocessor_pa"
    "rams\030\004 \001(\0132\036.sparsebev.PostprocessorPara"
    "ms\0224\n\023extract_feat_engine\030\005 \001(\0132\027.sparse"
    "bev.E2ETrtEngine\022/\n\016head1st_engine\030\006 \001(\013"
    "2\027.sparsebev.E2ETrtEngine\022/\n\016head2nd_eng"
    "ine\030\007 \001(\0132\027.sparsebev.E2ETrtEngine\022\027\n\017ho"
    "mography_path\030\010 \001(\t\022\022\n\nrun_status\030\t \001(\010\022"
    "\032\n\022use_half_precision\030\n \001(\010\"\240\002\n\016ModelCfg"
    "Params\022\026\n\016embedfeat_dims\030\001 \001(\r\022&\n\036sparse"
    "4d_extract_feat_shape_lc\030\002 \003(\r\022/\n\'sparse"
    "4d_extract_feat_spatial_shapes_ld\030\003 \003(\r\022"
    "/\n\'sparse4d_extract_feat_level_start_ind"
    "ex\030\004 \003(\r\022B\n:multiview_multiscale_deforma"
    "ble_attention_aggregation_path\030\005 \001(\t\022\023\n\013"
    "num_classes\030\006 \001(\r\022\023\n\013class_names\030\007 \003(\t\"c"
    "\n\014E2ETrtEngine\022\023\n\013engine_path\030\001 \001(\t\022\023\n\013p"
    "lugin_path\030\002 \001(\t\022\023\n\013input_names\030\003 \003(\t\022\024\n"
    "\014output_names\030\004 \003(\t\"\357\001\n\022PreprocessorPara"
    "ms\022\020\n\010num_cams\030\001 \001(\r\022\021\n\traw_img_c\030\002 \001(\r\022"
    "\021\n\traw_img_h\030\003 \001(\r\022\021\n\traw_img_w\030\004 \001(\r\022\031\n"
    "\021model_input_img_c\030\005 \001(\r\022\031\n\021model_input_"
    "img_h\030\006 \001(\r\022\031\n\021model_input_img_w\030\007 \001(\r\022\024"
    "\n\014resize_ratio\030\010 \001(\002\022\023\n\013crop_height\030\t \001("
    "\r\022\022\n\ncrop_width\030\n \001(\r\"\340\001\n\022InstanceBankPa"
    "rams\022\022\n\nnum_querys\030\001 \001(\r\022\022\n\nquery_dims\030\002"
    " \001(\r\022\026\n\016kmeans_anchors\030\003 \003(\002\022\023\n\013topk_que"
    "rys\030\004 \001(\r\022\031\n\021max_time_interval\030\005 \001(\002\022\035\n\025"
    "default_time_interval\030\006 \001(\002\022\030\n\020confidenc"
    "e_decay\030\007 \001(\002\022!\n\031instance_bank_anchor_pa"
    "th\030\010 \001(\t\"\236\001\n\023PostprocessorParams\022\035\n\025post"
    "_process_out_nums\030\001 \001(\r\022\036\n\026post_process_"
    "threshold\030\002 \001(\002\022\023\n\013use_gpu_nms\030\003 \001(\010\022\031\n\021"
    "gpu_nms_threshold\030\004 \001(\002\022\030\n\020max_output_bo"
    "xes\030\005 \001(\r\"i\n\014ModuleConfig\022*\n\013task_config"
    "\030\001 \001(\0132\025.sparsebev.TaskConfig\022-\n\016modules"
    "_config\030\002 \001(\0132\025.common.ModulesConfigb\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_SparseEnd2EndConfig_5fconf_2eproto_deps[1] = {
        &::descriptor_table_AlgorithmConfig_5fconf_2eproto,
};
static ::absl::once_flag descriptor_table_SparseEnd2EndConfig_5fconf_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_SparseEnd2EndConfig_5fconf_2eproto = {
    false,
    false,
    1684,
    descriptor_table_protodef_SparseEnd2EndConfig_5fconf_2eproto,
    "SparseEnd2EndConfig_conf.proto",
    &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto_once,
    descriptor_table_SparseEnd2EndConfig_5fconf_2eproto_deps,
    1,
    7,
    schemas,
    file_default_instances,
    TableStruct_SparseEnd2EndConfig_5fconf_2eproto::offsets,
    file_level_enum_descriptors_SparseEnd2EndConfig_5fconf_2eproto,
    file_level_service_descriptors_SparseEnd2EndConfig_5fconf_2eproto,
};
namespace sparsebev {
// ===================================================================

class TaskConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TaskConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_._has_bits_);
};

TaskConfig::TaskConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TaskConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sparsebev.TaskConfig)
}
PROTOBUF_NDEBUG_INLINE TaskConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sparsebev::TaskConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        homography_path_(arena, from.homography_path_) {}

TaskConfig::TaskConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TaskConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TaskConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.model_cfg_params_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.model_cfg_params_)
                : nullptr;
  _impl_.preprocessor_params_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.preprocessor_params_)
                : nullptr;
  _impl_.instance_bank_params_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.instance_bank_params_)
                : nullptr;
  _impl_.postprocessor_params_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.postprocessor_params_)
                : nullptr;
  _impl_.extract_feat_engine_ = ((cached_has_bits & 0x00000020u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.extract_feat_engine_)
                : nullptr;
  _impl_.head1st_engine_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.head1st_engine_)
                : nullptr;
  _impl_.head2nd_engine_ = ((cached_has_bits & 0x00000080u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.head2nd_engine_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, run_status_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, run_status_),
           offsetof(Impl_, use_half_precision_) -
               offsetof(Impl_, run_status_) +
               sizeof(Impl_::use_half_precision_));

  // @@protoc_insertion_point(copy_constructor:sparsebev.TaskConfig)
}
PROTOBUF_NDEBUG_INLINE TaskConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        homography_path_(arena) {}

inline void TaskConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, model_cfg_params_),
           0,
           offsetof(Impl_, use_half_precision_) -
               offsetof(Impl_, model_cfg_params_) +
               sizeof(Impl_::use_half_precision_));
}
TaskConfig::~TaskConfig() {
  // @@protoc_insertion_point(destructor:sparsebev.TaskConfig)
  SharedDtor(*this);
}
inline void TaskConfig::SharedDtor(MessageLite& self) {
  TaskConfig& this_ = static_cast<TaskConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.homography_path_.Destroy();
  delete this_._impl_.model_cfg_params_;
  delete this_._impl_.preprocessor_params_;
  delete this_._impl_.instance_bank_params_;
  delete this_._impl_.postprocessor_params_;
  delete this_._impl_.extract_feat_engine_;
  delete this_._impl_.head1st_engine_;
  delete this_._impl_.head2nd_engine_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TaskConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TaskConfig(arena);
}
constexpr auto TaskConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TaskConfig),
                                            alignof(TaskConfig));
}
constexpr auto TaskConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TaskConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TaskConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TaskConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TaskConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TaskConfig>(), &TaskConfig::ByteSizeLong,
              &TaskConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_._cached_size_),
          false,
      },
      &TaskConfig::kDescriptorMethods,
      &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        TaskConfig_class_data_ =
            TaskConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL TaskConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TaskConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TaskConfig_class_data_.tc_table);
  return TaskConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 7, 52, 2>
TaskConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TaskConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sparsebev::TaskConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .sparsebev.ModelCfgParams model_cfg_params = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.model_cfg_params_)}},
    // .sparsebev.PreprocessorParams preprocessor_params = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 2, 1, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.preprocessor_params_)}},
    // .sparsebev.InstanceBankParams instance_bank_params = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 2, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.instance_bank_params_)}},
    // .sparsebev.PostprocessorParams postprocessor_params = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 4, 3, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.postprocessor_params_)}},
    // .sparsebev.E2ETrtEngine extract_feat_engine = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 5, 4, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.extract_feat_engine_)}},
    // .sparsebev.E2ETrtEngine head1st_engine = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 6, 5, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.head1st_engine_)}},
    // .sparsebev.E2ETrtEngine head2nd_engine = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 7, 6, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.head2nd_engine_)}},
    // string homography_path = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.homography_path_)}},
    // bool run_status = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TaskConfig, _impl_.run_status_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.run_status_)}},
    // bool use_half_precision = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TaskConfig, _impl_.use_half_precision_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.use_half_precision_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .sparsebev.ModelCfgParams model_cfg_params = 1;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.model_cfg_params_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sparsebev.PreprocessorParams preprocessor_params = 2;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.preprocessor_params_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sparsebev.InstanceBankParams instance_bank_params = 3;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.instance_bank_params_), _Internal::kHasBitsOffset + 3, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sparsebev.PostprocessorParams postprocessor_params = 4;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.postprocessor_params_), _Internal::kHasBitsOffset + 4, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sparsebev.E2ETrtEngine extract_feat_engine = 5;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.extract_feat_engine_), _Internal::kHasBitsOffset + 5, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sparsebev.E2ETrtEngine head1st_engine = 6;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.head1st_engine_), _Internal::kHasBitsOffset + 6, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .sparsebev.E2ETrtEngine head2nd_engine = 7;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.head2nd_engine_), _Internal::kHasBitsOffset + 7, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string homography_path = 8;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.homography_path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool run_status = 9;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.run_status_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // bool use_half_precision = 10;
    {PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.use_half_precision_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sparsebev::ModelCfgParams>()},
      {::_pbi::TcParser::GetTable<::sparsebev::PreprocessorParams>()},
      {::_pbi::TcParser::GetTable<::sparsebev::InstanceBankParams>()},
      {::_pbi::TcParser::GetTable<::sparsebev::PostprocessorParams>()},
      {::_pbi::TcParser::GetTable<::sparsebev::E2ETrtEngine>()},
      {::_pbi::TcParser::GetTable<::sparsebev::E2ETrtEngine>()},
      {::_pbi::TcParser::GetTable<::sparsebev::E2ETrtEngine>()},
  }},
  {{
    "\24\0\0\0\0\0\0\0\17\0\0\0\0\0\0\0"
    "sparsebev.TaskConfig"
    "homography_path"
  }},
};
PROTOBUF_NOINLINE void TaskConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:sparsebev.TaskConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.homography_path_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.model_cfg_params_ != nullptr);
      _impl_.model_cfg_params_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.preprocessor_params_ != nullptr);
      _impl_.preprocessor_params_->Clear();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.instance_bank_params_ != nullptr);
      _impl_.instance_bank_params_->Clear();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.postprocessor_params_ != nullptr);
      _impl_.postprocessor_params_->Clear();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(_impl_.extract_feat_engine_ != nullptr);
      _impl_.extract_feat_engine_->Clear();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.head1st_engine_ != nullptr);
      _impl_.head1st_engine_->Clear();
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(_impl_.head2nd_engine_ != nullptr);
      _impl_.head2nd_engine_->Clear();
    }
  }
  ::memset(&_impl_.run_status_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.use_half_precision_) -
      reinterpret_cast<char*>(&_impl_.run_status_)) + sizeof(_impl_.use_half_precision_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TaskConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TaskConfig& this_ = static_cast<const TaskConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TaskConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TaskConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sparsebev.TaskConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sparsebev.ModelCfgParams model_cfg_params = 1;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.model_cfg_params_, this_._impl_.model_cfg_params_->GetCachedSize(), target,
        stream);
  }

  // .sparsebev.PreprocessorParams preprocessor_params = 2;
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.preprocessor_params_, this_._impl_.preprocessor_params_->GetCachedSize(), target,
        stream);
  }

  // .sparsebev.InstanceBankParams instance_bank_params = 3;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.instance_bank_params_, this_._impl_.instance_bank_params_->GetCachedSize(), target,
        stream);
  }

  // .sparsebev.PostprocessorParams postprocessor_params = 4;
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.postprocessor_params_, this_._impl_.postprocessor_params_->GetCachedSize(), target,
        stream);
  }

  // .sparsebev.E2ETrtEngine extract_feat_engine = 5;
  if ((cached_has_bits & 0x00000020u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.extract_feat_engine_, this_._impl_.extract_feat_engine_->GetCachedSize(), target,
        stream);
  }

  // .sparsebev.E2ETrtEngine head1st_engine = 6;
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.head1st_engine_, this_._impl_.head1st_engine_->GetCachedSize(), target,
        stream);
  }

  // .sparsebev.E2ETrtEngine head2nd_engine = 7;
  if ((cached_has_bits & 0x00000080u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, *this_._impl_.head2nd_engine_, this_._impl_.head2nd_engine_->GetCachedSize(), target,
        stream);
  }

  // string homography_path = 8;
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_homography_path().empty()) {
      const std::string& _s = this_._internal_homography_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.TaskConfig.homography_path");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  // bool run_status = 9;
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_run_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          9, this_._internal_run_status(), target);
    }
  }

  // bool use_half_precision = 10;
  if ((cached_has_bits & 0x00000200u) != 0) {
    if (this_._internal_use_half_precision() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          10, this_._internal_use_half_precision(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sparsebev.TaskConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TaskConfig::ByteSizeLong(const MessageLite& base) {
  const TaskConfig& this_ = static_cast<const TaskConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TaskConfig::ByteSizeLong() const {
  const TaskConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sparsebev.TaskConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string homography_path = 8;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_homography_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_homography_path());
      }
    }
    // .sparsebev.ModelCfgParams model_cfg_params = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.model_cfg_params_);
    }
    // .sparsebev.PreprocessorParams preprocessor_params = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.preprocessor_params_);
    }
    // .sparsebev.InstanceBankParams instance_bank_params = 3;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.instance_bank_params_);
    }
    // .sparsebev.PostprocessorParams postprocessor_params = 4;
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.postprocessor_params_);
    }
    // .sparsebev.E2ETrtEngine extract_feat_engine = 5;
    if ((cached_has_bits & 0x00000020u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.extract_feat_engine_);
    }
    // .sparsebev.E2ETrtEngine head1st_engine = 6;
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.head1st_engine_);
    }
    // .sparsebev.E2ETrtEngine head2nd_engine = 7;
    if ((cached_has_bits & 0x00000080u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.head2nd_engine_);
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // bool run_status = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_run_status() != 0) {
        total_size += 2;
      }
    }
    // bool use_half_precision = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_use_half_precision() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TaskConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskConfig*>(&to_msg);
  auto& from = static_cast<const TaskConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sparsebev.TaskConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_homography_path().empty()) {
        _this->_internal_set_homography_path(from._internal_homography_path());
      } else {
        if (_this->_impl_.homography_path_.IsDefault()) {
          _this->_internal_set_homography_path("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.model_cfg_params_ != nullptr);
      if (_this->_impl_.model_cfg_params_ == nullptr) {
        _this->_impl_.model_cfg_params_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.model_cfg_params_);
      } else {
        _this->_impl_.model_cfg_params_->MergeFrom(*from._impl_.model_cfg_params_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.preprocessor_params_ != nullptr);
      if (_this->_impl_.preprocessor_params_ == nullptr) {
        _this->_impl_.preprocessor_params_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.preprocessor_params_);
      } else {
        _this->_impl_.preprocessor_params_->MergeFrom(*from._impl_.preprocessor_params_);
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.instance_bank_params_ != nullptr);
      if (_this->_impl_.instance_bank_params_ == nullptr) {
        _this->_impl_.instance_bank_params_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.instance_bank_params_);
      } else {
        _this->_impl_.instance_bank_params_->MergeFrom(*from._impl_.instance_bank_params_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.postprocessor_params_ != nullptr);
      if (_this->_impl_.postprocessor_params_ == nullptr) {
        _this->_impl_.postprocessor_params_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.postprocessor_params_);
      } else {
        _this->_impl_.postprocessor_params_->MergeFrom(*from._impl_.postprocessor_params_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      ABSL_DCHECK(from._impl_.extract_feat_engine_ != nullptr);
      if (_this->_impl_.extract_feat_engine_ == nullptr) {
        _this->_impl_.extract_feat_engine_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.extract_feat_engine_);
      } else {
        _this->_impl_.extract_feat_engine_->MergeFrom(*from._impl_.extract_feat_engine_);
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.head1st_engine_ != nullptr);
      if (_this->_impl_.head1st_engine_ == nullptr) {
        _this->_impl_.head1st_engine_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.head1st_engine_);
      } else {
        _this->_impl_.head1st_engine_->MergeFrom(*from._impl_.head1st_engine_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      ABSL_DCHECK(from._impl_.head2nd_engine_ != nullptr);
      if (_this->_impl_.head2nd_engine_ == nullptr) {
        _this->_impl_.head2nd_engine_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.head2nd_engine_);
      } else {
        _this->_impl_.head2nd_engine_->MergeFrom(*from._impl_.head2nd_engine_);
      }
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_run_status() != 0) {
        _this->_impl_.run_status_ = from._impl_.run_status_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_use_half_precision() != 0) {
        _this->_impl_.use_half_precision_ = from._impl_.use_half_precision_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskConfig::CopyFrom(const TaskConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sparsebev.TaskConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskConfig::InternalSwap(TaskConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.homography_path_, &other->_impl_.homography_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.use_half_precision_)
      + sizeof(TaskConfig::_impl_.use_half_precision_)
      - PROTOBUF_FIELD_OFFSET(TaskConfig, _impl_.model_cfg_params_)>(
          reinterpret_cast<char*>(&_impl_.model_cfg_params_),
          reinterpret_cast<char*>(&other->_impl_.model_cfg_params_));
}

::google::protobuf::Metadata TaskConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModelCfgParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ModelCfgParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_._has_bits_);
};

ModelCfgParams::ModelCfgParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModelCfgParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sparsebev.ModelCfgParams)
}
PROTOBUF_NDEBUG_INLINE ModelCfgParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sparsebev::ModelCfgParams& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sparse4d_extract_feat_shape_lc_{visibility, arena, from.sparse4d_extract_feat_shape_lc_},
        _sparse4d_extract_feat_shape_lc_cached_byte_size_{0},
        sparse4d_extract_feat_spatial_shapes_ld_{visibility, arena, from.sparse4d_extract_feat_spatial_shapes_ld_},
        _sparse4d_extract_feat_spatial_shapes_ld_cached_byte_size_{0},
        sparse4d_extract_feat_level_start_index_{visibility, arena, from.sparse4d_extract_feat_level_start_index_},
        _sparse4d_extract_feat_level_start_index_cached_byte_size_{0},
        class_names_{visibility, arena, from.class_names_},
        multiview_multiscale_deformable_attention_aggregation_path_(arena, from.multiview_multiscale_deformable_attention_aggregation_path_) {}

ModelCfgParams::ModelCfgParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModelCfgParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModelCfgParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModelCfgParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, embedfeat_dims_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, embedfeat_dims_),
           offsetof(Impl_, num_classes_) -
               offsetof(Impl_, embedfeat_dims_) +
               sizeof(Impl_::num_classes_));

  // @@protoc_insertion_point(copy_constructor:sparsebev.ModelCfgParams)
}
PROTOBUF_NDEBUG_INLINE ModelCfgParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        sparse4d_extract_feat_shape_lc_{visibility, arena},
        _sparse4d_extract_feat_shape_lc_cached_byte_size_{0},
        sparse4d_extract_feat_spatial_shapes_ld_{visibility, arena},
        _sparse4d_extract_feat_spatial_shapes_ld_cached_byte_size_{0},
        sparse4d_extract_feat_level_start_index_{visibility, arena},
        _sparse4d_extract_feat_level_start_index_cached_byte_size_{0},
        class_names_{visibility, arena},
        multiview_multiscale_deformable_attention_aggregation_path_(arena) {}

inline void ModelCfgParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, embedfeat_dims_),
           0,
           offsetof(Impl_, num_classes_) -
               offsetof(Impl_, embedfeat_dims_) +
               sizeof(Impl_::num_classes_));
}
ModelCfgParams::~ModelCfgParams() {
  // @@protoc_insertion_point(destructor:sparsebev.ModelCfgParams)
  SharedDtor(*this);
}
inline void ModelCfgParams::SharedDtor(MessageLite& self) {
  ModelCfgParams& this_ = static_cast<ModelCfgParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.multiview_multiscale_deformable_attention_aggregation_path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModelCfgParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModelCfgParams(arena);
}
constexpr auto ModelCfgParams::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_shape_lc_) +
          decltype(ModelCfgParams::_impl_.sparse4d_extract_feat_shape_lc_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_spatial_shapes_ld_) +
          decltype(ModelCfgParams::_impl_.sparse4d_extract_feat_spatial_shapes_ld_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_level_start_index_) +
          decltype(ModelCfgParams::_impl_.sparse4d_extract_feat_level_start_index_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.class_names_) +
          decltype(ModelCfgParams::_impl_.class_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ModelCfgParams), alignof(ModelCfgParams), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ModelCfgParams::PlacementNew_,
                                 sizeof(ModelCfgParams),
                                 alignof(ModelCfgParams));
  }
}
constexpr auto ModelCfgParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModelCfgParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModelCfgParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModelCfgParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModelCfgParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModelCfgParams>(), &ModelCfgParams::ByteSizeLong,
              &ModelCfgParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_._cached_size_),
          false,
      },
      &ModelCfgParams::kDescriptorMethods,
      &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ModelCfgParams_class_data_ =
            ModelCfgParams::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ModelCfgParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModelCfgParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModelCfgParams_class_data_.tc_table);
  return ModelCfgParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 102, 2>
ModelCfgParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ModelCfgParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sparsebev::ModelCfgParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 embedfeat_dims = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModelCfgParams, _impl_.embedfeat_dims_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.embedfeat_dims_)}},
    // repeated uint32 sparse4d_extract_feat_shape_lc = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_shape_lc_)}},
    // repeated uint32 sparse4d_extract_feat_spatial_shapes_ld = 3;
    {::_pbi::TcParser::FastV32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_spatial_shapes_ld_)}},
    // repeated uint32 sparse4d_extract_feat_level_start_index = 4;
    {::_pbi::TcParser::FastV32P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_level_start_index_)}},
    // string multiview_multiscale_deformable_attention_aggregation_path = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.multiview_multiscale_deformable_attention_aggregation_path_)}},
    // uint32 num_classes = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ModelCfgParams, _impl_.num_classes_), 2>(),
     {48, 2, 0, PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.num_classes_)}},
    // repeated string class_names = 7;
    {::_pbi::TcParser::FastUR1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.class_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 embedfeat_dims = 1;
    {PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.embedfeat_dims_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 sparse4d_extract_feat_shape_lc = 2;
    {PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_shape_lc_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 sparse4d_extract_feat_spatial_shapes_ld = 3;
    {PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_spatial_shapes_ld_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // repeated uint32 sparse4d_extract_feat_level_start_index = 4;
    {PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.sparse4d_extract_feat_level_start_index_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt32)},
    // string multiview_multiscale_deformable_attention_aggregation_path = 5;
    {PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.multiview_multiscale_deformable_attention_aggregation_path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 num_classes = 6;
    {PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.num_classes_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated string class_names = 7;
    {PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.class_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\30\0\0\0\0\72\0\13"
    "sparsebev.ModelCfgParams"
    "multiview_multiscale_deformable_attention_aggregation_path"
    "class_names"
  }},
};
PROTOBUF_NOINLINE void ModelCfgParams::Clear() {
// @@protoc_insertion_point(message_clear_start:sparsebev.ModelCfgParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sparse4d_extract_feat_shape_lc_.Clear();
  _impl_.sparse4d_extract_feat_spatial_shapes_ld_.Clear();
  _impl_.sparse4d_extract_feat_level_start_index_.Clear();
  _impl_.class_names_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.multiview_multiscale_deformable_attention_aggregation_path_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.embedfeat_dims_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.num_classes_) -
        reinterpret_cast<char*>(&_impl_.embedfeat_dims_)) + sizeof(_impl_.num_classes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModelCfgParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModelCfgParams& this_ = static_cast<const ModelCfgParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModelCfgParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModelCfgParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sparsebev.ModelCfgParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 embedfeat_dims = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_embedfeat_dims() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_embedfeat_dims(), target);
    }
  }

  // repeated uint32 sparse4d_extract_feat_shape_lc = 2;
  {
    int byte_size = this_._impl_._sparse4d_extract_feat_shape_lc_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, this_._internal_sparse4d_extract_feat_shape_lc(), byte_size, target);
    }
  }

  // repeated uint32 sparse4d_extract_feat_spatial_shapes_ld = 3;
  {
    int byte_size = this_._impl_._sparse4d_extract_feat_spatial_shapes_ld_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, this_._internal_sparse4d_extract_feat_spatial_shapes_ld(), byte_size, target);
    }
  }

  // repeated uint32 sparse4d_extract_feat_level_start_index = 4;
  {
    int byte_size = this_._impl_._sparse4d_extract_feat_level_start_index_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, this_._internal_sparse4d_extract_feat_level_start_index(), byte_size, target);
    }
  }

  // string multiview_multiscale_deformable_attention_aggregation_path = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_multiview_multiscale_deformable_attention_aggregation_path().empty()) {
      const std::string& _s = this_._internal_multiview_multiscale_deformable_attention_aggregation_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.ModelCfgParams.multiview_multiscale_deformable_attention_aggregation_path");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // uint32 num_classes = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_num_classes() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_num_classes(), target);
    }
  }

  // repeated string class_names = 7;
  for (int i = 0, n = this_._internal_class_names_size(); i < n; ++i) {
    const auto& s = this_._internal_class_names().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.ModelCfgParams.class_names");
    target = stream->WriteString(7, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sparsebev.ModelCfgParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModelCfgParams::ByteSizeLong(const MessageLite& base) {
  const ModelCfgParams& this_ = static_cast<const ModelCfgParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModelCfgParams::ByteSizeLong() const {
  const ModelCfgParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sparsebev.ModelCfgParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated uint32 sparse4d_extract_feat_shape_lc = 2;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_sparse4d_extract_feat_shape_lc(), 1,
              this_._impl_._sparse4d_extract_feat_shape_lc_cached_byte_size_);
    }
    // repeated uint32 sparse4d_extract_feat_spatial_shapes_ld = 3;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_sparse4d_extract_feat_spatial_shapes_ld(), 1,
              this_._impl_._sparse4d_extract_feat_spatial_shapes_ld_cached_byte_size_);
    }
    // repeated uint32 sparse4d_extract_feat_level_start_index = 4;
    {
      total_size +=
          ::_pbi::WireFormatLite::UInt32SizeWithPackedTagSize(
              this_._internal_sparse4d_extract_feat_level_start_index(), 1,
              this_._impl_._sparse4d_extract_feat_level_start_index_cached_byte_size_);
    }
    // repeated string class_names = 7;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_class_names().size());
      for (int i = 0, n = this_._internal_class_names().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_class_names().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string multiview_multiscale_deformable_attention_aggregation_path = 5;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_multiview_multiscale_deformable_attention_aggregation_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_multiview_multiscale_deformable_attention_aggregation_path());
      }
    }
    // uint32 embedfeat_dims = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_embedfeat_dims() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_embedfeat_dims());
      }
    }
    // uint32 num_classes = 6;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_num_classes() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_num_classes());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModelCfgParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModelCfgParams*>(&to_msg);
  auto& from = static_cast<const ModelCfgParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sparsebev.ModelCfgParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sparse4d_extract_feat_shape_lc()->MergeFrom(from._internal_sparse4d_extract_feat_shape_lc());
  _this->_internal_mutable_sparse4d_extract_feat_spatial_shapes_ld()->MergeFrom(from._internal_sparse4d_extract_feat_spatial_shapes_ld());
  _this->_internal_mutable_sparse4d_extract_feat_level_start_index()->MergeFrom(from._internal_sparse4d_extract_feat_level_start_index());
  _this->_internal_mutable_class_names()->MergeFrom(from._internal_class_names());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_multiview_multiscale_deformable_attention_aggregation_path().empty()) {
        _this->_internal_set_multiview_multiscale_deformable_attention_aggregation_path(from._internal_multiview_multiscale_deformable_attention_aggregation_path());
      } else {
        if (_this->_impl_.multiview_multiscale_deformable_attention_aggregation_path_.IsDefault()) {
          _this->_internal_set_multiview_multiscale_deformable_attention_aggregation_path("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_embedfeat_dims() != 0) {
        _this->_impl_.embedfeat_dims_ = from._impl_.embedfeat_dims_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_num_classes() != 0) {
        _this->_impl_.num_classes_ = from._impl_.num_classes_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModelCfgParams::CopyFrom(const ModelCfgParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sparsebev.ModelCfgParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModelCfgParams::InternalSwap(ModelCfgParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sparse4d_extract_feat_shape_lc_.InternalSwap(&other->_impl_.sparse4d_extract_feat_shape_lc_);
  _impl_.sparse4d_extract_feat_spatial_shapes_ld_.InternalSwap(&other->_impl_.sparse4d_extract_feat_spatial_shapes_ld_);
  _impl_.sparse4d_extract_feat_level_start_index_.InternalSwap(&other->_impl_.sparse4d_extract_feat_level_start_index_);
  _impl_.class_names_.InternalSwap(&other->_impl_.class_names_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.multiview_multiscale_deformable_attention_aggregation_path_, &other->_impl_.multiview_multiscale_deformable_attention_aggregation_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.num_classes_)
      + sizeof(ModelCfgParams::_impl_.num_classes_)
      - PROTOBUF_FIELD_OFFSET(ModelCfgParams, _impl_.embedfeat_dims_)>(
          reinterpret_cast<char*>(&_impl_.embedfeat_dims_),
          reinterpret_cast<char*>(&other->_impl_.embedfeat_dims_));
}

::google::protobuf::Metadata ModelCfgParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class E2ETrtEngine::_Internal {
 public:
  using HasBits =
      decltype(std::declval<E2ETrtEngine>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_._has_bits_);
};

E2ETrtEngine::E2ETrtEngine(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, E2ETrtEngine_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sparsebev.E2ETrtEngine)
}
PROTOBUF_NDEBUG_INLINE E2ETrtEngine::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sparsebev::E2ETrtEngine& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        input_names_{visibility, arena, from.input_names_},
        output_names_{visibility, arena, from.output_names_},
        engine_path_(arena, from.engine_path_),
        plugin_path_(arena, from.plugin_path_) {}

E2ETrtEngine::E2ETrtEngine(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const E2ETrtEngine& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, E2ETrtEngine_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  E2ETrtEngine* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:sparsebev.E2ETrtEngine)
}
PROTOBUF_NDEBUG_INLINE E2ETrtEngine::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        input_names_{visibility, arena},
        output_names_{visibility, arena},
        engine_path_(arena),
        plugin_path_(arena) {}

inline void E2ETrtEngine::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
E2ETrtEngine::~E2ETrtEngine() {
  // @@protoc_insertion_point(destructor:sparsebev.E2ETrtEngine)
  SharedDtor(*this);
}
inline void E2ETrtEngine::SharedDtor(MessageLite& self) {
  E2ETrtEngine& this_ = static_cast<E2ETrtEngine&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.engine_path_.Destroy();
  this_._impl_.plugin_path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL E2ETrtEngine::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) E2ETrtEngine(arena);
}
constexpr auto E2ETrtEngine::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.input_names_) +
          decltype(E2ETrtEngine::_impl_.input_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.output_names_) +
          decltype(E2ETrtEngine::_impl_.output_names_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(E2ETrtEngine), alignof(E2ETrtEngine), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&E2ETrtEngine::PlacementNew_,
                                 sizeof(E2ETrtEngine),
                                 alignof(E2ETrtEngine));
  }
}
constexpr auto E2ETrtEngine::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_E2ETrtEngine_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &E2ETrtEngine::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<E2ETrtEngine>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &E2ETrtEngine::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<E2ETrtEngine>(), &E2ETrtEngine::ByteSizeLong,
              &E2ETrtEngine::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_._cached_size_),
          false,
      },
      &E2ETrtEngine::kDescriptorMethods,
      &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        E2ETrtEngine_class_data_ =
            E2ETrtEngine::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL E2ETrtEngine::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&E2ETrtEngine_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(E2ETrtEngine_class_data_.tc_table);
  return E2ETrtEngine_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 76, 2>
E2ETrtEngine::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    E2ETrtEngine_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sparsebev::E2ETrtEngine>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string output_names = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.output_names_)}},
    // string engine_path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.engine_path_)}},
    // string plugin_path = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.plugin_path_)}},
    // repeated string input_names = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.input_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string engine_path = 1;
    {PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.engine_path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string plugin_path = 2;
    {PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.plugin_path_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string input_names = 3;
    {PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.input_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string output_names = 4;
    {PROTOBUF_FIELD_OFFSET(E2ETrtEngine, _impl_.output_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\26\13\13\13\14\0\0\0"
    "sparsebev.E2ETrtEngine"
    "engine_path"
    "plugin_path"
    "input_names"
    "output_names"
  }},
};
PROTOBUF_NOINLINE void E2ETrtEngine::Clear() {
// @@protoc_insertion_point(message_clear_start:sparsebev.E2ETrtEngine)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_names_.Clear();
  _impl_.output_names_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.engine_path_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.plugin_path_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL E2ETrtEngine::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const E2ETrtEngine& this_ = static_cast<const E2ETrtEngine&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL E2ETrtEngine::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const E2ETrtEngine& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sparsebev.E2ETrtEngine)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string engine_path = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_engine_path().empty()) {
      const std::string& _s = this_._internal_engine_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.E2ETrtEngine.engine_path");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string plugin_path = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_plugin_path().empty()) {
      const std::string& _s = this_._internal_plugin_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.E2ETrtEngine.plugin_path");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated string input_names = 3;
  for (int i = 0, n = this_._internal_input_names_size(); i < n; ++i) {
    const auto& s = this_._internal_input_names().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.E2ETrtEngine.input_names");
    target = stream->WriteString(3, s, target);
  }

  // repeated string output_names = 4;
  for (int i = 0, n = this_._internal_output_names_size(); i < n; ++i) {
    const auto& s = this_._internal_output_names().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.E2ETrtEngine.output_names");
    target = stream->WriteString(4, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sparsebev.E2ETrtEngine)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t E2ETrtEngine::ByteSizeLong(const MessageLite& base) {
  const E2ETrtEngine& this_ = static_cast<const E2ETrtEngine&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t E2ETrtEngine::ByteSizeLong() const {
  const E2ETrtEngine& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sparsebev.E2ETrtEngine)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string input_names = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_input_names().size());
      for (int i = 0, n = this_._internal_input_names().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_input_names().Get(i));
      }
    }
    // repeated string output_names = 4;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_output_names().size());
      for (int i = 0, n = this_._internal_output_names().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_output_names().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string engine_path = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_engine_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_engine_path());
      }
    }
    // string plugin_path = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_plugin_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_plugin_path());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void E2ETrtEngine::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<E2ETrtEngine*>(&to_msg);
  auto& from = static_cast<const E2ETrtEngine&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sparsebev.E2ETrtEngine)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_names()->MergeFrom(from._internal_input_names());
  _this->_internal_mutable_output_names()->MergeFrom(from._internal_output_names());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_engine_path().empty()) {
        _this->_internal_set_engine_path(from._internal_engine_path());
      } else {
        if (_this->_impl_.engine_path_.IsDefault()) {
          _this->_internal_set_engine_path("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_plugin_path().empty()) {
        _this->_internal_set_plugin_path(from._internal_plugin_path());
      } else {
        if (_this->_impl_.plugin_path_.IsDefault()) {
          _this->_internal_set_plugin_path("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void E2ETrtEngine::CopyFrom(const E2ETrtEngine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sparsebev.E2ETrtEngine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void E2ETrtEngine::InternalSwap(E2ETrtEngine* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.input_names_.InternalSwap(&other->_impl_.input_names_);
  _impl_.output_names_.InternalSwap(&other->_impl_.output_names_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.engine_path_, &other->_impl_.engine_path_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.plugin_path_, &other->_impl_.plugin_path_, arena);
}

::google::protobuf::Metadata E2ETrtEngine::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PreprocessorParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PreprocessorParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_._has_bits_);
};

PreprocessorParams::PreprocessorParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PreprocessorParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sparsebev.PreprocessorParams)
}
PreprocessorParams::PreprocessorParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PreprocessorParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PreprocessorParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PreprocessorParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PreprocessorParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_cams_),
           0,
           offsetof(Impl_, crop_width_) -
               offsetof(Impl_, num_cams_) +
               sizeof(Impl_::crop_width_));
}
PreprocessorParams::~PreprocessorParams() {
  // @@protoc_insertion_point(destructor:sparsebev.PreprocessorParams)
  SharedDtor(*this);
}
inline void PreprocessorParams::SharedDtor(MessageLite& self) {
  PreprocessorParams& this_ = static_cast<PreprocessorParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PreprocessorParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PreprocessorParams(arena);
}
constexpr auto PreprocessorParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PreprocessorParams),
                                            alignof(PreprocessorParams));
}
constexpr auto PreprocessorParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PreprocessorParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PreprocessorParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PreprocessorParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PreprocessorParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PreprocessorParams>(), &PreprocessorParams::ByteSizeLong,
              &PreprocessorParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_._cached_size_),
          false,
      },
      &PreprocessorParams::kDescriptorMethods,
      &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PreprocessorParams_class_data_ =
            PreprocessorParams::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PreprocessorParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PreprocessorParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PreprocessorParams_class_data_.tc_table);
  return PreprocessorParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 2>
PreprocessorParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PreprocessorParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sparsebev::PreprocessorParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 num_cams = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.num_cams_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.num_cams_)}},
    // uint32 raw_img_c = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.raw_img_c_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.raw_img_c_)}},
    // uint32 raw_img_h = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.raw_img_h_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.raw_img_h_)}},
    // uint32 raw_img_w = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.raw_img_w_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.raw_img_w_)}},
    // uint32 model_input_img_c = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.model_input_img_c_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.model_input_img_c_)}},
    // uint32 model_input_img_h = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.model_input_img_h_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.model_input_img_h_)}},
    // uint32 model_input_img_w = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.model_input_img_w_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.model_input_img_w_)}},
    // float resize_ratio = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 7, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.resize_ratio_)}},
    // uint32 crop_height = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.crop_height_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.crop_height_)}},
    // uint32 crop_width = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PreprocessorParams, _impl_.crop_width_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.crop_width_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 num_cams = 1;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.num_cams_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 raw_img_c = 2;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.raw_img_c_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 raw_img_h = 3;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.raw_img_h_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 raw_img_w = 4;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.raw_img_w_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 model_input_img_c = 5;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.model_input_img_c_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 model_input_img_h = 6;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.model_input_img_h_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 model_input_img_w = 7;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.model_input_img_w_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // float resize_ratio = 8;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.resize_ratio_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // uint32 crop_height = 9;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.crop_height_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 crop_width = 10;
    {PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.crop_width_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PreprocessorParams::Clear() {
// @@protoc_insertion_point(message_clear_start:sparsebev.PreprocessorParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    ::memset(&_impl_.num_cams_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.resize_ratio_) -
        reinterpret_cast<char*>(&_impl_.num_cams_)) + sizeof(_impl_.resize_ratio_));
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    ::memset(&_impl_.crop_height_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.crop_width_) -
        reinterpret_cast<char*>(&_impl_.crop_height_)) + sizeof(_impl_.crop_width_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PreprocessorParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PreprocessorParams& this_ = static_cast<const PreprocessorParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PreprocessorParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PreprocessorParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sparsebev.PreprocessorParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 num_cams = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_num_cams() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_num_cams(), target);
    }
  }

  // uint32 raw_img_c = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_raw_img_c() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_raw_img_c(), target);
    }
  }

  // uint32 raw_img_h = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_raw_img_h() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          3, this_._internal_raw_img_h(), target);
    }
  }

  // uint32 raw_img_w = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_raw_img_w() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_raw_img_w(), target);
    }
  }

  // uint32 model_input_img_c = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_model_input_img_c() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_model_input_img_c(), target);
    }
  }

  // uint32 model_input_img_h = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_model_input_img_h() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          6, this_._internal_model_input_img_h(), target);
    }
  }

  // uint32 model_input_img_w = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (this_._internal_model_input_img_w() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          7, this_._internal_model_input_img_w(), target);
    }
  }

  // float resize_ratio = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_resize_ratio()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          8, this_._internal_resize_ratio(), target);
    }
  }

  // uint32 crop_height = 9;
  if ((this_._impl_._has_bits_[0] & 0x00000100u) != 0) {
    if (this_._internal_crop_height() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          9, this_._internal_crop_height(), target);
    }
  }

  // uint32 crop_width = 10;
  if ((this_._impl_._has_bits_[0] & 0x00000200u) != 0) {
    if (this_._internal_crop_width() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          10, this_._internal_crop_width(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sparsebev.PreprocessorParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PreprocessorParams::ByteSizeLong(const MessageLite& base) {
  const PreprocessorParams& this_ = static_cast<const PreprocessorParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PreprocessorParams::ByteSizeLong() const {
  const PreprocessorParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sparsebev.PreprocessorParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // uint32 num_cams = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_num_cams() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_num_cams());
      }
    }
    // uint32 raw_img_c = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_raw_img_c() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_raw_img_c());
      }
    }
    // uint32 raw_img_h = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_raw_img_h() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_raw_img_h());
      }
    }
    // uint32 raw_img_w = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_raw_img_w() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_raw_img_w());
      }
    }
    // uint32 model_input_img_c = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_model_input_img_c() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_model_input_img_c());
      }
    }
    // uint32 model_input_img_h = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_model_input_img_h() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_model_input_img_h());
      }
    }
    // uint32 model_input_img_w = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_model_input_img_w() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_model_input_img_w());
      }
    }
    // float resize_ratio = 8;
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_resize_ratio()) != 0) {
        total_size += 5;
      }
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    // uint32 crop_height = 9;
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_crop_height() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_crop_height());
      }
    }
    // uint32 crop_width = 10;
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_crop_width() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_crop_width());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PreprocessorParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PreprocessorParams*>(&to_msg);
  auto& from = static_cast<const PreprocessorParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sparsebev.PreprocessorParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_num_cams() != 0) {
        _this->_impl_.num_cams_ = from._impl_.num_cams_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_raw_img_c() != 0) {
        _this->_impl_.raw_img_c_ = from._impl_.raw_img_c_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_raw_img_h() != 0) {
        _this->_impl_.raw_img_h_ = from._impl_.raw_img_h_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_raw_img_w() != 0) {
        _this->_impl_.raw_img_w_ = from._impl_.raw_img_w_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_model_input_img_c() != 0) {
        _this->_impl_.model_input_img_c_ = from._impl_.model_input_img_c_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_model_input_img_h() != 0) {
        _this->_impl_.model_input_img_h_ = from._impl_.model_input_img_h_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_model_input_img_w() != 0) {
        _this->_impl_.model_input_img_w_ = from._impl_.model_input_img_w_;
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_resize_ratio()) != 0) {
        _this->_impl_.resize_ratio_ = from._impl_.resize_ratio_;
      }
    }
  }
  if ((cached_has_bits & 0x00000300u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_crop_height() != 0) {
        _this->_impl_.crop_height_ = from._impl_.crop_height_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_crop_width() != 0) {
        _this->_impl_.crop_width_ = from._impl_.crop_width_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PreprocessorParams::CopyFrom(const PreprocessorParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sparsebev.PreprocessorParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PreprocessorParams::InternalSwap(PreprocessorParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.crop_width_)
      + sizeof(PreprocessorParams::_impl_.crop_width_)
      - PROTOBUF_FIELD_OFFSET(PreprocessorParams, _impl_.num_cams_)>(
          reinterpret_cast<char*>(&_impl_.num_cams_),
          reinterpret_cast<char*>(&other->_impl_.num_cams_));
}

::google::protobuf::Metadata PreprocessorParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InstanceBankParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InstanceBankParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_._has_bits_);
};

InstanceBankParams::InstanceBankParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InstanceBankParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sparsebev.InstanceBankParams)
}
PROTOBUF_NDEBUG_INLINE InstanceBankParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sparsebev::InstanceBankParams& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        kmeans_anchors_{visibility, arena, from.kmeans_anchors_},
        instance_bank_anchor_path_(arena, from.instance_bank_anchor_path_) {}

InstanceBankParams::InstanceBankParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const InstanceBankParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, InstanceBankParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InstanceBankParams* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_querys_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, num_querys_),
           offsetof(Impl_, confidence_decay_) -
               offsetof(Impl_, num_querys_) +
               sizeof(Impl_::confidence_decay_));

  // @@protoc_insertion_point(copy_constructor:sparsebev.InstanceBankParams)
}
PROTOBUF_NDEBUG_INLINE InstanceBankParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        kmeans_anchors_{visibility, arena},
        instance_bank_anchor_path_(arena) {}

inline void InstanceBankParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, num_querys_),
           0,
           offsetof(Impl_, confidence_decay_) -
               offsetof(Impl_, num_querys_) +
               sizeof(Impl_::confidence_decay_));
}
InstanceBankParams::~InstanceBankParams() {
  // @@protoc_insertion_point(destructor:sparsebev.InstanceBankParams)
  SharedDtor(*this);
}
inline void InstanceBankParams::SharedDtor(MessageLite& self) {
  InstanceBankParams& this_ = static_cast<InstanceBankParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.instance_bank_anchor_path_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL InstanceBankParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) InstanceBankParams(arena);
}
constexpr auto InstanceBankParams::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.kmeans_anchors_) +
          decltype(InstanceBankParams::_impl_.kmeans_anchors_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(InstanceBankParams), alignof(InstanceBankParams), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&InstanceBankParams::PlacementNew_,
                                 sizeof(InstanceBankParams),
                                 alignof(InstanceBankParams));
  }
}
constexpr auto InstanceBankParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_InstanceBankParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &InstanceBankParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<InstanceBankParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &InstanceBankParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<InstanceBankParams>(), &InstanceBankParams::ByteSizeLong,
              &InstanceBankParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_._cached_size_),
          false,
      },
      &InstanceBankParams::kDescriptorMethods,
      &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        InstanceBankParams_class_data_ =
            InstanceBankParams::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL InstanceBankParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&InstanceBankParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(InstanceBankParams_class_data_.tc_table);
  return InstanceBankParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 70, 2>
InstanceBankParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    InstanceBankParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sparsebev::InstanceBankParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string instance_bank_anchor_path = 8;
    {::_pbi::TcParser::FastUS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.instance_bank_anchor_path_)}},
    // uint32 num_querys = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstanceBankParams, _impl_.num_querys_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.num_querys_)}},
    // uint32 query_dims = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstanceBankParams, _impl_.query_dims_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.query_dims_)}},
    // repeated float kmeans_anchors = 3;
    {::_pbi::TcParser::FastF32P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.kmeans_anchors_)}},
    // uint32 topk_querys = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InstanceBankParams, _impl_.topk_querys_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.topk_querys_)}},
    // float max_time_interval = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.max_time_interval_)}},
    // float default_time_interval = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.default_time_interval_)}},
    // float confidence_decay = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 6, 0, PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.confidence_decay_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 num_querys = 1;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.num_querys_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // uint32 query_dims = 2;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.query_dims_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated float kmeans_anchors = 3;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.kmeans_anchors_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
    // uint32 topk_querys = 4;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.topk_querys_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // float max_time_interval = 5;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.max_time_interval_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float default_time_interval = 6;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.default_time_interval_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float confidence_decay = 7;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.confidence_decay_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // string instance_bank_anchor_path = 8;
    {PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.instance_bank_anchor_path_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\0\0\0\0\0\0\31\0\0\0\0\0\0\0"
    "sparsebev.InstanceBankParams"
    "instance_bank_anchor_path"
  }},
};
PROTOBUF_NOINLINE void InstanceBankParams::Clear() {
// @@protoc_insertion_point(message_clear_start:sparsebev.InstanceBankParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.kmeans_anchors_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.instance_bank_anchor_path_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000007eu) != 0) {
    ::memset(&_impl_.num_querys_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.confidence_decay_) -
        reinterpret_cast<char*>(&_impl_.num_querys_)) + sizeof(_impl_.confidence_decay_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL InstanceBankParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const InstanceBankParams& this_ = static_cast<const InstanceBankParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL InstanceBankParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const InstanceBankParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sparsebev.InstanceBankParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 num_querys = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_num_querys() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_num_querys(), target);
    }
  }

  // uint32 query_dims = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_query_dims() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          2, this_._internal_query_dims(), target);
    }
  }

  // repeated float kmeans_anchors = 3;
  if (this_._internal_kmeans_anchors_size() > 0) {
    target = stream->WriteFixedPacked(3, this_._internal_kmeans_anchors(), target);
  }

  // uint32 topk_querys = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_topk_querys() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          4, this_._internal_topk_querys(), target);
    }
  }

  // float max_time_interval = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_max_time_interval()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          5, this_._internal_max_time_interval(), target);
    }
  }

  // float default_time_interval = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_default_time_interval()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          6, this_._internal_default_time_interval(), target);
    }
  }

  // float confidence_decay = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_confidence_decay()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          7, this_._internal_confidence_decay(), target);
    }
  }

  // string instance_bank_anchor_path = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_instance_bank_anchor_path().empty()) {
      const std::string& _s = this_._internal_instance_bank_anchor_path();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "sparsebev.InstanceBankParams.instance_bank_anchor_path");
      target = stream->WriteStringMaybeAliased(8, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sparsebev.InstanceBankParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t InstanceBankParams::ByteSizeLong(const MessageLite& base) {
  const InstanceBankParams& this_ = static_cast<const InstanceBankParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t InstanceBankParams::ByteSizeLong() const {
  const InstanceBankParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sparsebev.InstanceBankParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated float kmeans_anchors = 3;
    {
      std::size_t data_size = std::size_t{4} *
          ::_pbi::FromIntSize(this_._internal_kmeans_anchors_size());
      std::size_t tag_size = data_size == 0
          ? 0
          : 1 + ::_pbi::WireFormatLite::Int32Size(
                              static_cast<::int32_t>(data_size));
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string instance_bank_anchor_path = 8;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_instance_bank_anchor_path().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_instance_bank_anchor_path());
      }
    }
    // uint32 num_querys = 1;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_num_querys() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_num_querys());
      }
    }
    // uint32 query_dims = 2;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_query_dims() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_query_dims());
      }
    }
    // uint32 topk_querys = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_topk_querys() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_topk_querys());
      }
    }
    // float max_time_interval = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_max_time_interval()) != 0) {
        total_size += 5;
      }
    }
    // float default_time_interval = 6;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_default_time_interval()) != 0) {
        total_size += 5;
      }
    }
    // float confidence_decay = 7;
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_confidence_decay()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void InstanceBankParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InstanceBankParams*>(&to_msg);
  auto& from = static_cast<const InstanceBankParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sparsebev.InstanceBankParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_kmeans_anchors()->MergeFrom(from._internal_kmeans_anchors());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_instance_bank_anchor_path().empty()) {
        _this->_internal_set_instance_bank_anchor_path(from._internal_instance_bank_anchor_path());
      } else {
        if (_this->_impl_.instance_bank_anchor_path_.IsDefault()) {
          _this->_internal_set_instance_bank_anchor_path("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_num_querys() != 0) {
        _this->_impl_.num_querys_ = from._impl_.num_querys_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_query_dims() != 0) {
        _this->_impl_.query_dims_ = from._impl_.query_dims_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_topk_querys() != 0) {
        _this->_impl_.topk_querys_ = from._impl_.topk_querys_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_max_time_interval()) != 0) {
        _this->_impl_.max_time_interval_ = from._impl_.max_time_interval_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_default_time_interval()) != 0) {
        _this->_impl_.default_time_interval_ = from._impl_.default_time_interval_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_confidence_decay()) != 0) {
        _this->_impl_.confidence_decay_ = from._impl_.confidence_decay_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InstanceBankParams::CopyFrom(const InstanceBankParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sparsebev.InstanceBankParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InstanceBankParams::InternalSwap(InstanceBankParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.kmeans_anchors_.InternalSwap(&other->_impl_.kmeans_anchors_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.instance_bank_anchor_path_, &other->_impl_.instance_bank_anchor_path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.confidence_decay_)
      + sizeof(InstanceBankParams::_impl_.confidence_decay_)
      - PROTOBUF_FIELD_OFFSET(InstanceBankParams, _impl_.num_querys_)>(
          reinterpret_cast<char*>(&_impl_.num_querys_),
          reinterpret_cast<char*>(&other->_impl_.num_querys_));
}

::google::protobuf::Metadata InstanceBankParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PostprocessorParams::_Internal {
 public:
  using HasBits =
      decltype(std::declval<PostprocessorParams>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_._has_bits_);
};

PostprocessorParams::PostprocessorParams(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PostprocessorParams_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sparsebev.PostprocessorParams)
}
PostprocessorParams::PostprocessorParams(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PostprocessorParams& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PostprocessorParams_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE PostprocessorParams::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PostprocessorParams::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, post_process_out_nums_),
           0,
           offsetof(Impl_, max_output_boxes_) -
               offsetof(Impl_, post_process_out_nums_) +
               sizeof(Impl_::max_output_boxes_));
}
PostprocessorParams::~PostprocessorParams() {
  // @@protoc_insertion_point(destructor:sparsebev.PostprocessorParams)
  SharedDtor(*this);
}
inline void PostprocessorParams::SharedDtor(MessageLite& self) {
  PostprocessorParams& this_ = static_cast<PostprocessorParams&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PostprocessorParams::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PostprocessorParams(arena);
}
constexpr auto PostprocessorParams::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PostprocessorParams),
                                            alignof(PostprocessorParams));
}
constexpr auto PostprocessorParams::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PostprocessorParams_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PostprocessorParams::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PostprocessorParams>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PostprocessorParams::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PostprocessorParams>(), &PostprocessorParams::ByteSizeLong,
              &PostprocessorParams::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_._cached_size_),
          false,
      },
      &PostprocessorParams::kDescriptorMethods,
      &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        PostprocessorParams_class_data_ =
            PostprocessorParams::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL PostprocessorParams::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PostprocessorParams_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PostprocessorParams_class_data_.tc_table);
  return PostprocessorParams_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2>
PostprocessorParams::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PostprocessorParams_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sparsebev::PostprocessorParams>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 post_process_out_nums = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostprocessorParams, _impl_.post_process_out_nums_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.post_process_out_nums_)}},
    // float post_process_threshold = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.post_process_threshold_)}},
    // bool use_gpu_nms = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PostprocessorParams, _impl_.use_gpu_nms_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.use_gpu_nms_)}},
    // float gpu_nms_threshold = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.gpu_nms_threshold_)}},
    // uint32 max_output_boxes = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PostprocessorParams, _impl_.max_output_boxes_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.max_output_boxes_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 post_process_out_nums = 1;
    {PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.post_process_out_nums_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // float post_process_threshold = 2;
    {PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.post_process_threshold_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool use_gpu_nms = 3;
    {PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.use_gpu_nms_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // float gpu_nms_threshold = 4;
    {PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.gpu_nms_threshold_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // uint32 max_output_boxes = 5;
    {PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.max_output_boxes_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void PostprocessorParams::Clear() {
// @@protoc_insertion_point(message_clear_start:sparsebev.PostprocessorParams)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    ::memset(&_impl_.post_process_out_nums_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.max_output_boxes_) -
        reinterpret_cast<char*>(&_impl_.post_process_out_nums_)) + sizeof(_impl_.max_output_boxes_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PostprocessorParams::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PostprocessorParams& this_ = static_cast<const PostprocessorParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PostprocessorParams::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PostprocessorParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sparsebev.PostprocessorParams)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 post_process_out_nums = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_post_process_out_nums() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          1, this_._internal_post_process_out_nums(), target);
    }
  }

  // float post_process_threshold = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_post_process_threshold()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_post_process_threshold(), target);
    }
  }

  // bool use_gpu_nms = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_use_gpu_nms() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_use_gpu_nms(), target);
    }
  }

  // float gpu_nms_threshold = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_gpu_nms_threshold()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this_._internal_gpu_nms_threshold(), target);
    }
  }

  // uint32 max_output_boxes = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_max_output_boxes() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
          5, this_._internal_max_output_boxes(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sparsebev.PostprocessorParams)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PostprocessorParams::ByteSizeLong(const MessageLite& base) {
  const PostprocessorParams& this_ = static_cast<const PostprocessorParams&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PostprocessorParams::ByteSizeLong() const {
  const PostprocessorParams& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sparsebev.PostprocessorParams)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // uint32 post_process_out_nums = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_post_process_out_nums() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_post_process_out_nums());
      }
    }
    // float post_process_threshold = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_post_process_threshold()) != 0) {
        total_size += 5;
      }
    }
    // bool use_gpu_nms = 3;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_use_gpu_nms() != 0) {
        total_size += 2;
      }
    }
    // float gpu_nms_threshold = 4;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_gpu_nms_threshold()) != 0) {
        total_size += 5;
      }
    }
    // uint32 max_output_boxes = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_max_output_boxes() != 0) {
        total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
            this_._internal_max_output_boxes());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PostprocessorParams::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PostprocessorParams*>(&to_msg);
  auto& from = static_cast<const PostprocessorParams&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sparsebev.PostprocessorParams)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_post_process_out_nums() != 0) {
        _this->_impl_.post_process_out_nums_ = from._impl_.post_process_out_nums_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_post_process_threshold()) != 0) {
        _this->_impl_.post_process_threshold_ = from._impl_.post_process_threshold_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_use_gpu_nms() != 0) {
        _this->_impl_.use_gpu_nms_ = from._impl_.use_gpu_nms_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_gpu_nms_threshold()) != 0) {
        _this->_impl_.gpu_nms_threshold_ = from._impl_.gpu_nms_threshold_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_max_output_boxes() != 0) {
        _this->_impl_.max_output_boxes_ = from._impl_.max_output_boxes_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PostprocessorParams::CopyFrom(const PostprocessorParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sparsebev.PostprocessorParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PostprocessorParams::InternalSwap(PostprocessorParams* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.max_output_boxes_)
      + sizeof(PostprocessorParams::_impl_.max_output_boxes_)
      - PROTOBUF_FIELD_OFFSET(PostprocessorParams, _impl_.post_process_out_nums_)>(
          reinterpret_cast<char*>(&_impl_.post_process_out_nums_),
          reinterpret_cast<char*>(&other->_impl_.post_process_out_nums_));
}

::google::protobuf::Metadata PostprocessorParams::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModuleConfig::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ModuleConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_._has_bits_);
};

void ModuleConfig::clear_modules_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.modules_config_ != nullptr) _impl_.modules_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ModuleConfig::ModuleConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:sparsebev.ModuleConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::sparsebev::ModuleConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ModuleConfig::ModuleConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ModuleConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ModuleConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ModuleConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.task_config_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.task_config_)
                : nullptr;
  _impl_.modules_config_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.modules_config_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:sparsebev.ModuleConfig)
}
PROTOBUF_NDEBUG_INLINE ModuleConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ModuleConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, task_config_),
           0,
           offsetof(Impl_, modules_config_) -
               offsetof(Impl_, task_config_) +
               sizeof(Impl_::modules_config_));
}
ModuleConfig::~ModuleConfig() {
  // @@protoc_insertion_point(destructor:sparsebev.ModuleConfig)
  SharedDtor(*this);
}
inline void ModuleConfig::SharedDtor(MessageLite& self) {
  ModuleConfig& this_ = static_cast<ModuleConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.task_config_;
  delete this_._impl_.modules_config_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ModuleConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ModuleConfig(arena);
}
constexpr auto ModuleConfig::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ModuleConfig),
                                            alignof(ModuleConfig));
}
constexpr auto ModuleConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ModuleConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ModuleConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ModuleConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ModuleConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ModuleConfig>(), &ModuleConfig::ByteSizeLong,
              &ModuleConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_._cached_size_),
          false,
      },
      &ModuleConfig::kDescriptorMethods,
      &descriptor_table_SparseEnd2EndConfig_5fconf_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ModuleConfig_class_data_ =
            ModuleConfig::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ModuleConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ModuleConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ModuleConfig_class_data_.tc_table);
  return ModuleConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
ModuleConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ModuleConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::sparsebev::ModuleConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .common.ModulesConfig modules_config = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.modules_config_)}},
    // .sparsebev.TaskConfig task_config = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.task_config_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .sparsebev.TaskConfig task_config = 1;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.task_config_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .common.ModulesConfig modules_config = 2;
    {PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.modules_config_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::sparsebev::TaskConfig>()},
      {::_pbi::TcParser::GetTable<::common::ModulesConfig>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ModuleConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:sparsebev.ModuleConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.task_config_ != nullptr);
      _impl_.task_config_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.modules_config_ != nullptr);
      _impl_.modules_config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ModuleConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ModuleConfig& this_ = static_cast<const ModuleConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ModuleConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ModuleConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:sparsebev.ModuleConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .sparsebev.TaskConfig task_config = 1;
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.task_config_, this_._impl_.task_config_->GetCachedSize(), target,
        stream);
  }

  // .common.ModulesConfig modules_config = 2;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.modules_config_, this_._impl_.modules_config_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sparsebev.ModuleConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ModuleConfig::ByteSizeLong(const MessageLite& base) {
  const ModuleConfig& this_ = static_cast<const ModuleConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ModuleConfig::ByteSizeLong() const {
  const ModuleConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:sparsebev.ModuleConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .sparsebev.TaskConfig task_config = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.task_config_);
    }
    // .common.ModulesConfig modules_config = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.modules_config_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ModuleConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModuleConfig*>(&to_msg);
  auto& from = static_cast<const ModuleConfig&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:sparsebev.ModuleConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.task_config_ != nullptr);
      if (_this->_impl_.task_config_ == nullptr) {
        _this->_impl_.task_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.task_config_);
      } else {
        _this->_impl_.task_config_->MergeFrom(*from._impl_.task_config_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.modules_config_ != nullptr);
      if (_this->_impl_.modules_config_ == nullptr) {
        _this->_impl_.modules_config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.modules_config_);
      } else {
        _this->_impl_.modules_config_->MergeFrom(*from._impl_.modules_config_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModuleConfig::CopyFrom(const ModuleConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sparsebev.ModuleConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModuleConfig::InternalSwap(ModuleConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.modules_config_)
      + sizeof(ModuleConfig::_impl_.modules_config_)
      - PROTOBUF_FIELD_OFFSET(ModuleConfig, _impl_.task_config_)>(
          reinterpret_cast<char*>(&_impl_.task_config_),
          reinterpret_cast<char*>(&other->_impl_.task_config_));
}

::google::protobuf::Metadata ModuleConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace sparsebev
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_SparseEnd2EndConfig_5fconf_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
